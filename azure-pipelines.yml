# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
pr:
  branches:
    include:
      - main

pool:
  name: default
  demands:
  - agent.name -equals pool1 

stages:
  - stage: Build_backend
    displayName: "Construir backend"
    jobs:
      - job: Build_backend_container
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Azure for Students(be47ff6d-9100-47c2-ab9a-af967aabfd60)'
              scriptType: 'ps'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az acr login --name $(CONTAINER_REGISTRY_URL)
            displayName: "inicio de sesion Azure"
          - task: CmdLine@2
            inputs:
              script: |
                cd backend_sistema_notificaciones
                docker build -t $(CONTAINER_REGISTRY_URL)/backend-notificaciones:$(BACKEND_TAG) --build-arg DB_USERNAME="$(DB_USERNAME)" --build-arg DB_PASSWORD="$(DB_PASSWORD)" --build-arg DB_DATABASE="$(DB_DATABASE)" --build-arg DB_HOST="$(DB_HOST)" --build-arg DB_PORT="$(DB_PORT)" --build-arg DB_DIALECT="$(DB_DIALECT)" --build-arg DB_OPERATOR_ALIASES="$(DB_OPERATOR_ALIASES)" --build-arg NODE_ENV="$(NODE_ENV)" --build-arg KEY_SQ="$(KEY_SQ)" .
            displayName: "Compilando el contenedor de docker"
          - task: CmdLine@2
            inputs:
              script: 'docker push $(CONTAINER_REGISTRY_URL)/backend-notificaciones:$(BACKEND_TAG)'
            displayName: "Enpujar contenedor a Container Registry"
      - job: Deploy_backend_container
        steps:
        - task: AzureContainerApps@1
          inputs:
            azureSubscription: 'Azure for Students(be47ff6d-9100-47c2-ab9a-af967aabfd60)'
            acrName: '$(ACR_NAME)'
            acrUsername: '$(ACR_USER)'
            acrPassword: '$(ACR_PASSWORD)'
            imageToDeploy: '$(CONTAINER_REGISTRY_URL)/backend-notificaciones:$(BACKEND_TAG)'
            containerAppName: 'backend'
            resourceGroup: 'Suples'
            targetPort: '8000'
          

          
      


